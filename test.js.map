{"version":3,"file":"test.js","sources":["src/index.ts","test/index.ts"],"sourcesContent":["import StripWhitespace from 'strip-whitespace';\nimport { Compiler } from 'webpack';\nimport { RawSource, ReplaceSource, SourceMapSource } from 'webpack-sources';\n\nconst stripWhitespace = new StripWhitespace();\nconst pluginName = 'strip-whitespace-plugin';\n\nexport default class StripWhitespacePlugin {\n\n  public apply(compiler: Compiler) {\n\n    compiler.plugin('compilation', (compilation: any) => {\n      compilation.plugin('optimize-chunk-assets', (chunks: any, callback: () => void) => {\n        chunks.forEach((chunk: any) => {\n          chunk.files\n            .forEach((file: string) => {\n              const asset = compilation.assets[file];\n              const code = asset.source();\n\n              const result = stripWhitespace.strip(code);\n\n              if (result.replacements.length === 0) {\n                // nothing to do here\n                return;\n              }\n\n              if (!compiler.options.devtool) {\n                compilation.assets[file] = new RawSource(result.code);\n              } else {\n                const replaceSource = new ReplaceSource(compilation.assets[file], pluginName);\n\n                // perform the replacements\n                for (const replacement of result.replacements) {\n                  replaceSource.replace(replacement.start, replacement.end, replacement.text);\n                }\n\n                // generate the new sourcemap\n                const sourceAndMap = replaceSource.sourceAndMap();\n                const { map } = sourceAndMap;\n\n                // replace the asset with the new sourcemap\n                compilation.assets[file] = new SourceMapSource(result.code, pluginName, map, code);\n              }\n            });\n        });\n        callback();\n      });\n    });\n  }\n}\n","import { ok } from 'assert';\nimport { RawSource } from 'webpack-sources';\nimport StripWhitespacePlugin from '../src/index';\n\n// initialize objects and create test code with expectations\nconst plugin = new StripWhitespacePlugin();\n\n// wire up the fake compiler and fake settings\ntype TestFunction = (value?: any, value2?: any) => void;\nconst fakeAssets = {\n  'test.js': new RawSource('')\n};\nconst fakeCompiler: any = {\n  plugin: (name: 'compilation', callback: TestFunction) => {\n    callback({\n      assets: fakeAssets,\n      plugin: (name2: 'optimize-chunk-assets', callback2: TestFunction) => {\n        callback2([{\n          files: ['test.js']\n        }], () => {\n          // do nothing\n        });\n      }\n    });\n  }\n};\n\n{\n  const code = `const longString = \"      x          \";`;\n  const expected = `const longString = \" x \";`;\n\n  // wire up the fake compiler and fake settings\n  fakeAssets['test.js'] = new RawSource(code);\n  fakeCompiler.options = { devtool: true };\n\n  // execute the plugin\n  plugin.apply(fakeCompiler);\n\n  // gather the results\n  const result = fakeAssets['test.js'].source();\n\n  // assert the result matches the expectations\n  ok(result === expected, `Result (${result}) did not equal expected (${expected})`);\n}\n\n{\n  const code = `const longString = \"      x          \";`;\n  const expected = `const longString = \" x \";`;\n\n  // wire up the fake compiler and fake settings\n  fakeAssets['test.js'] = new RawSource(code);\n  fakeCompiler.options = { devtool: false };\n\n  // execute the plugin\n  plugin.apply(fakeCompiler);\n\n  // gather the results\n  const result = fakeAssets['test.js'].source();\n\n  // assert the result matches the expectations\n  ok(result === expected, `Result (${result}) did not equal expected (${expected})`);\n}\n\n{\n  const code = `const longString = \" x \";`;\n  const expected = `const longString = \" x \";`;\n\n  // wire up the fake compiler and fake settings\n  fakeAssets['test.js'] = new RawSource(code);\n  fakeCompiler.options = { devtool: false };\n\n  // execute the plugin\n  plugin.apply(fakeCompiler);\n\n  // gather the results\n  const result = fakeAssets['test.js'].source();\n\n  // assert the result matches the expectations\n  ok(result === expected, `Result (${result}) did not equal expected (${expected})`);\n}\n"],"names":["RawSource","ReplaceSource","SourceMapSource","ok"],"mappings":"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"}